{"version":3,"sources":["services/contactApi.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","view/ContactsView.js","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css"],"names":["fetchContacts","a","axios","get","data","fetchAddContacts","name","number","post","headers","newContact","fetchDeleteContact","id","delete","fetchAllContacts","dispatch","fetchStatus","contacts","alert","getItems","state","items","getFilter","filter","ContactList","useDispatch","useSelector","isLoggedIn","authSelectors","getIsLoggedIn","useEffect","filtered","contact","toLowerCase","trim","includes","className","styles","list_section","map","list_element","list_button","type","onClick","console","log","fetchDelete","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","item","fetchAddContactTo","form_section","form_label","pattern","title","required","onChange","form_input","form_button","connect","onFilter","changeFilter","filter_label","target","filter_input","ContactsView","module","exports"],"mappings":"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","file":"static/js/3.4960bd5c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function fetchAddContacts(data) {\r\n  const { name, number } = data;\r\n  const newContact = await axios.post(\r\n    `/contacts`,\r\n    {\r\n      name: `${name}`,\r\n      number: `${number}`,\r\n    },\r\n    {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return newContact;\r\n}\r\n\r\nexport async function fetchDeleteContact(id) {\r\n  await axios.delete(`/contacts/${id}`);\r\n}\r\n\r\nexport async function fetchEditContact(id) {\r\n  const editedContact = axios.patch(`/contacts/${id}`);\r\n  return editedContact;\r\n}\r\n\r\nexport async function fetchRegister(data) {\r\n  const { name, email, password } = data;\r\n  const registerNewUser = await axios.post(\r\n    `/user/signup`,\r\n    {\r\n      name: `${name}`,\r\n      email: `${email}`,\r\n      password: `${password}`,\r\n    },\r\n    {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return registerNewUser;\r\n}\r\n\r\nexport async function fetchGetCurrent(data) {\r\n  const fetchCurrentUser = await axios.get(`/users/current/${data.id}`);\r\n  return fetchCurrentUser;\r\n}\r\n\r\nexport async function fetchLogin() {\r\n  const fetchLoginUser = await axios.post(`/user/login`);\r\n  return fetchLoginUser;\r\n}\r\n\r\nexport async function fetchLogout() {\r\n  const fetchLogoutUser = await axios.post(`/user/login`);\r\n  return fetchLogoutUser;\r\n}\r\n","import * as fetchStatus from \"./contacts-actions\";\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContacts,\r\n  fetchDeleteContact,\r\n} from \"../../services/contactApi\";\r\n\r\nexport const fetchAllContacts = () => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchContactsRequest());\r\n  try {\r\n    const contacts = await fetchContacts();\r\n    dispatch(fetchStatus.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(fetchStatus.fetchContactsError(alert(\"Something whent wrong...\")));\r\n  }\r\n};\r\n\r\nexport const fetchAddContactTo = (data) => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchAddToContactsRequest());\r\n  try {\r\n    await fetchAddContacts(data);\r\n    dispatch(fetchStatus.fetchAddToContactsSuccess());\r\n    dispatch(fetchAllContacts());\r\n  } catch (error) {\r\n    dispatch(\r\n      fetchStatus.fetchAddToContactsError(alert(\"Something whent wrong...\"))\r\n    );\r\n  }\r\n};\r\n\r\nexport const fetchDelete = (id) => async (dispatch) => {\r\n  dispatch(fetchStatus.fetchDeleteRequest());\r\n  try {\r\n    await fetchDeleteContact(id);\r\n    dispatch(fetchStatus.fetchDeleteSuccess());\r\n    dispatch(fetchAllContacts());\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(\r\n      fetchStatus.fetchDeleteError(alert(\"You can not delete the contact\"))\r\n    );\r\n  }\r\n};\r\n","export const getItems = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n","import React from \"react\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchAllContacts,\r\n  fetchDelete,\r\n} from \"../../redux/contacts/contacts-operations\";\r\nimport { getItems, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport authSelectors from \"../../redux/auth/auth-selector\";\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getItems);\r\n  const filter = useSelector(getFilter);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) return;\r\n    dispatch(fetchAllContacts());\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  const filtered = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\r\n  );\r\n\r\n  return (\r\n    <ul className={styles.list_section}>\r\n      {filtered.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.list_element}>\r\n          <span>{name}: </span>\r\n          <span>{number} </span>\r\n          <button\r\n            className={styles.list_button}\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => dispatch(fetchDelete(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchAddContactTo } from \"../../redux/contacts/contacts-operations\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\r\nimport React from \"react\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const state = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const data = e.currentTarget.value;\r\n    switch (e.currentTarget.name) {\r\n      case \"name\":\r\n        setName(data);\r\n        break;\r\n      case \"number\":\r\n        setNumber(data);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { name, number };\r\n    const repeat = state.find((item) => item.number === data.number);\r\n    if (repeat) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(fetchAddContactTo(data));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form_section}>\r\n      <label className={styles.form_label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        />\r\n      </label>\r\n      <label className={styles.form_label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={styles.form_input}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.form_button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <label className={styles.filter_label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        className={styles.filter_input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(changeFilter(e)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchAllContacts } from \"../redux/contacts/contacts-operations\";\r\nimport ContactList from \"../Components/ContactList/ContactList\";\r\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\r\nimport Filter from \"../Components/Filter/Filter\";\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchAllContacts()), [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_section\":\"ContactList_list_section__SRJfu\",\"list_element\":\"ContactList_list_element__19I3x\",\"list_button\":\"ContactList_list_button__2bLI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_section\":\"ContactForm_form_section__H7D5R\",\"form_label\":\"ContactForm_form_label__3mgf3\",\"form_input\":\"ContactForm_form_input__2D3Gx\",\"form_button\":\"ContactForm_form_button__2uXwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__axTYx\",\"filter_input\":\"Filter_filter_input__dLi7E\"};"],"sourceRoot":""}